[{"/home/sock/code/ethersproject/src/index.tsx":"1","/home/sock/code/ethersproject/src/reportWebVitals.ts":"2","/home/sock/code/ethersproject/src/App.tsx":"3","/home/sock/code/ethersproject/src/components/Dapp.tsx":"4","/home/sock/code/ethersproject/src/components/Navigation.tsx":"5","/home/sock/code/ethersproject/src/components/History.tsx":"6","/home/sock/code/ethersproject/src/assets/stuff.ts":"7","/home/sock/code/ethersproject/src/assets/web3.ts":"8"},{"size":479,"mtime":1611279281630,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1610847952000,"results":"11","hashOfConfig":"10"},{"size":887,"mtime":1611277455950,"results":"12","hashOfConfig":"10"},{"size":5767,"mtime":1611288359930,"results":"13","hashOfConfig":"10"},{"size":1796,"mtime":1611279841000,"results":"14","hashOfConfig":"10"},{"size":456,"mtime":1610860476260,"results":"15","hashOfConfig":"10"},{"size":436,"mtime":1611285868160,"results":"16","hashOfConfig":"10"},{"size":1319,"mtime":1611288384180,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"40csty",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/sock/code/ethersproject/src/index.tsx",[],["39","40"],"/home/sock/code/ethersproject/src/reportWebVitals.ts",[],"/home/sock/code/ethersproject/src/App.tsx",["41"],"import React, { useEffect, useState } from \"react\";\nimport { History } from \"./components/History\";\nimport { Dapp } from \"./components/Dapp\";\nimport { Navigation } from \"./components/Navigation\";\n\nimport \"./App.scss\";\n\nfunction App() {\n  const [user, setUser] = useState(\"\");\n  //opens intial wallet via metamasks injected eth window variable\n  const LoadDapp = async () => {\n    console.log(\"loading user account...\");\n    setUser(\n      (await (window as any).ethereum.request(\n        { method: \"eth_requestAccounts\" },\n      ))[0],\n    );\n    console.log(\"loading finished!\");\n  };\n  // start dapp via metamask wallet\n  useEffect(() => {\n    LoadDapp();\n  }, []);\n  return (\n    <div className=\"App\">\n      <Navigation user={user} />\n      <Dapp userAddress={user} />\n      {/* <History user=\"0xa485b3e631c02834A73349CFA6c5543bB0796985\" /> */}\n    </div>\n  );\n}\n\nexport default App;\n","/home/sock/code/ethersproject/src/components/Dapp.tsx",["42","43","44","45"],"/home/sock/code/ethersproject/src/components/Navigation.tsx",["46","47"],"import React, { useState } from \"react\";\nimport { Menu, Modal } from \"antd\";\nimport { BellOutlined, DashboardOutlined } from \"@ant-design/icons\";\nimport { Button } from \"antd\";\nimport { WalletOutlined } from \"@ant-design/icons\";\nconst { SubMenu } = Menu;\n\ninterface Props {\n  user?: string;\n}\n\nexport const Navigation: React.FC<Props> = ({\n  user = \"\",\n  ...props\n}) => {\n  const [current, setCurrent] = useState(\"dashboard\");\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const handleClick = (e: any) => {\n    console.log(\"click \", e);\n    setCurrent(e.key);\n  };\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n  return (\n    <div className=\"navbar\">\n      <Menu onClick={handleClick} selectedKeys={[current]} mode=\"horizontal\">\n        <Menu.Item key=\"dashboard\" icon={<DashboardOutlined />}>\n          Dashboard\n        </Menu.Item>\n        {/* <Menu.Item key=\"app\" icon={<BellOutlined />}>\n          Set Alert\n        </Menu.Item> */}\n      </Menu>\n      <Button\n        onClick={showModal}\n        shape=\"round\"\n        type=\"primary\"\n        icon={<WalletOutlined />}\n      >\n        {user.substring(0, 4) + \"...\" +\n          user.substring(user.length - 3, user.length)}\n      </Button>\n      <Modal\n        title={\"Account: \" + user}\n        visible={isModalVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n      >\n        <p></p>\n        <Button\n          onClick={() => {\n            window.open(`https://etherscan.io/address/${user}`);\n          }}\n        >\n          View On Etherscan\n        </Button>\n        <br />\n        <br />\n        <p>More Coming Soon...</p>\n      </Modal>\n    </div>\n  );\n};\n","/home/sock/code/ethersproject/src/components/History.tsx",["48"],"import React, { useEffect } from \"react\";\nimport { ethers } from \"ethers\";\ninterface Props {\n  user: string;\n}\n\nexport const History: React.FC<Props> = ({ user }) => {\n  useEffect(() => {\n    let etherscanProvider = new ethers.providers.EtherscanProvider();\n    etherscanProvider.getHistory(user).then((history) => {\n      history.forEach((tx) => {\n        console.log(tx);\n      });\n    });\n  }, []);\n  return (\n    <div>\n      History\n    </div>\n  );\n};\n",["49","50"],"/home/sock/code/ethersproject/src/assets/stuff.ts",[],"/home/sock/code/ethersproject/src/assets/web3.ts",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":2,"column":10,"nodeType":"57","messageId":"58","endLine":2,"endColumn":17},{"ruleId":"59","severity":1,"message":"60","line":85,"column":39,"nodeType":"61","messageId":"62","endLine":85,"endColumn":46},{"ruleId":"59","severity":1,"message":"60","line":88,"column":13,"nodeType":"61","messageId":"62","endLine":88,"endColumn":20},{"ruleId":"63","severity":1,"message":"64","line":98,"column":17,"nodeType":"65","messageId":"66","endLine":98,"endColumn":19},{"ruleId":"67","severity":1,"message":"68","line":99,"column":6,"nodeType":"69","endLine":99,"endColumn":19,"suggestions":"70"},{"ruleId":"55","severity":1,"message":"71","line":3,"column":10,"nodeType":"57","messageId":"58","endLine":3,"endColumn":22},{"ruleId":"55","severity":1,"message":"72","line":6,"column":9,"nodeType":"57","messageId":"58","endLine":6,"endColumn":16},{"ruleId":"67","severity":1,"message":"73","line":15,"column":6,"nodeType":"69","endLine":15,"endColumn":8,"suggestions":"74"},{"ruleId":"51","replacedBy":"75"},{"ruleId":"53","replacedBy":"76"},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"@typescript-eslint/no-unused-vars","'History' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getInfo'. Either include it or remove the dependency array.","ArrayExpression",["79"],"'BellOutlined' is defined but never used.","'SubMenu' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["80"],["77"],["78"],"no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},"Update the dependencies array to be: [getInfo, userAddress]",{"range":"85","text":"86"},"Update the dependencies array to be: [user]",{"range":"87","text":"88"},[3301,3314],"[getInfo, userAddress]",[397,399],"[user]"]